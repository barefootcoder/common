let SessionLoad = 1
if &cp | set nocp | endif
let s:cpo_save=&cpo
set cpo&vim
map! <BS> 
map  0Wy0!!date +\%Y-\%m-\%dT\%H:\%M:\%S\%z0P
map  "zyy:!find_artist "z" %
map  :!grep -Pe '^\s*\#\s*[A-Z\s]+$' %
map  :!clgrep -mn  %
map  :!clgrep -m %
map 	 :!clgrep -i %
map  :!clgrep -a %
nmap  1Gn
map  
nmap  :w:!pusht %
map  :files
map  :w:!vcpatchws -f %:e!
map  :%s/[ 	]\+$//
nnoremap cl :%g/^# line/d:w
nnoremap rl m`:1,$! reset_lines``
nnoremap il m`Oi# line 0:1,$! reset_lines:w``
nnoremap r} gq}
nnoremap rr gqgq
nnoremap r ^gq/^$\|^	*#$\|^	*[^	#]\|^--! print$
nmap d :w:!perldoc %
nmap b :exe "!git blame % | less +" . line(".") . "G"
nmap  /\<\>
nmap % :call FindMatching()
nnoremap K :set iskeyword=@,48-57,_,$,@-@,%,:K:set iskeyword=@,48-57,_
map Lock :map ZZ LockZZ:echo "Locked"
map LockZZ :let choice = confirm("Are you sure you want to exit?", "&Yes\n&No", 2):if choice == 1:x:endif
map QQ !!perl -lpe 's/^([<>FXV=:~*? -]{4})?(.*?) - (.*?)(\s+[[{].*?[]}])?$/$1$3 - $2$4/'
map Q :s/^\/\* //:s/ \*\/$//
nmap Y y$
map [] k$][%?}
map [[ ?{w99[{
map [s m`/^[ 	]*#[ 	]\+[A-Z ]\+[ 	]*#\?$``N
map ]] j0[[%/{
map ][ /}b99]}
map ]s /^[ 	]*#[ 	]\+[A-Z ]\+[ 	]*#\?$
map g G
map qq :s/^\(...\) \(.\+\) - \([^	]\+\)/\1 \3 - \2/
map q :.s/.*\///I> ? qq:.s/\.mp3//
nnoremap <silent> <Plug>NetrwBrowseX :call netrw#NetrwBrowseX(expand("<cWORD>"),0)
map! t 1G!Gperl -lne '$secs += 2*length if /^\./; END { printf "time: \%d:\%02d ($secs)", int($secs / 60), $secs \% 60 }'
let &cpo=s:cpo_save
unlet s:cpo_save
set autoindent
set background=dark
set backspace=indent,eol,start
set comments=b:#,b:%,b:--!\ print,b:--,fb:*
set equalprg=tfmt\ -t4\ -w100
set fileencodings=ucs-bom,utf-8,default,latin1
set formatoptions=croqv
set helplang=en
set history=50
set iskeyword=@,48-57,_,$,@-@,%,:
set keywordprg=perlref
set nomodeline
set printoptions=paper:letter
set ruler
set runtimepath=~/.vim,/var/lib/vim/addons,/usr/share/vim/vimfiles,/usr/share/vim/vim73,/usr/share/vim/vimfiles/after,/var/lib/vim/addons/after,~/.vim/after
set sessionoptions=buffers,curdir,globals,options,unix
set shiftwidth=4
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc
set tabstop=4
set textwidth=100
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
let MarksFile = "/home/buddy/.vimS-mixes.marks"
silent only
cd /export/music
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +557 ~/Dropbox/mixes/mixes
badd +106 tracklists/misc/queue.m3u
badd +77 tracklists/mixes/Paradoxically\ Sized\ World.m3u
badd +1 tracklists/mixes/Porchwell\ Firetime.m3u
badd +1 tracklists/mixes/Salsatic\ Vibrato.m3u
badd +91 tracklists/misc/test.m3u
badd +1 tracklists/mixes/Sirenexiv\ Cola.m3u
badd +18 tracklists/mixes/Zephyrous\ Aquamarine.m3u
badd +13 tracklists/mixes/Wisty\ Mysteria.m3u
badd +5 tracklists/mixes/Stumbling\ Locomotive.m3u
badd +25 tracklists/mixes/Honeysuckle\ Bubblegum.m3u
badd +6 tracklists/mixes/Mars\ de\ la\ Morte.m3u
badd +28 tracklists/mixes/Yuletidal\ Pools.m3u
badd +23 tracklists/mixes/Moonside\ by\ Riverlight.m3u
args ~/Dropbox/mixes/mixes
edit ~/Dropbox/mixes/mixes
set splitbelow splitright
set nosplitbelow
set nosplitright
wincmd t
set winheight=1 winwidth=1
argglobal
setlocal keymap=
setlocal noarabic
setlocal autoindent
setlocal nobinary
setlocal bufhidden=
setlocal buflisted
setlocal buftype=
setlocal nocindent
setlocal cinkeys=0{,0},0),:,0#,!^F,o,O,e
setlocal cinoptions=
setlocal cinwords=if,else,while,do,for,switch
setlocal colorcolumn=
setlocal comments=b:#,b:%,b:--!\ print,b:--,fb:*
setlocal commentstring=/*%s*/
setlocal complete=.,w,b,u,t,i
setlocal concealcursor=
setlocal conceallevel=0
setlocal completefunc=
setlocal nocopyindent
setlocal cryptmethod=
setlocal nocursorbind
setlocal nocursorcolumn
setlocal nocursorline
setlocal define=
setlocal dictionary=
setlocal nodiff
setlocal equalprg=
setlocal errorformat=
setlocal noexpandtab
if &filetype != ''
setlocal filetype=
endif
setlocal foldcolumn=0
setlocal foldenable
setlocal foldexpr=0
setlocal foldignore=#
setlocal foldlevel=0
setlocal foldmarker={{{,}}}
setlocal foldmethod=manual
setlocal foldminlines=1
setlocal foldnestmax=20
setlocal foldtext=foldtext()
setlocal formatexpr=
setlocal formatoptions=croqv
setlocal formatlistpat=^\\s*\\d\\+[\\]:.)}\\t\ ]\\s*
setlocal grepprg=
setlocal iminsert=0
setlocal imsearch=0
setlocal include=
setlocal includeexpr=
setlocal indentexpr=
setlocal indentkeys=0{,0},:,0#,!^F,o,O,e
setlocal noinfercase
setlocal iskeyword=@,48-57,_,$,@-@,%,:
setlocal keywordprg=
set linebreak
setlocal linebreak
setlocal nolisp
setlocal nolist
setlocal makeprg=
setlocal matchpairs=(:),{:},[:]
setlocal nomodeline
setlocal modifiable
setlocal nrformats=octal,hex
setlocal nonumber
setlocal numberwidth=4
setlocal omnifunc=
setlocal path=
setlocal nopreserveindent
setlocal nopreviewwindow
setlocal quoteescape=\\
setlocal noreadonly
setlocal norelativenumber
setlocal norightleft
setlocal rightleftcmd=search
setlocal noscrollbind
setlocal shiftwidth=4
setlocal noshortname
setlocal nosmartindent
setlocal softtabstop=0
setlocal nospell
setlocal spellcapcheck=[.?!]\\_[\\])'\"\	\ ]\\+
setlocal spellfile=
setlocal spelllang=en
setlocal statusline=
setlocal suffixesadd=
setlocal swapfile
setlocal synmaxcol=3000
if &syntax != ''
setlocal syntax=
endif
setlocal tabstop=4
setlocal tags=
setlocal textwidth=100
setlocal thesaurus=
setlocal noundofile
setlocal nowinfixheight
setlocal nowinfixwidth
setlocal wrap
setlocal wrapmargin=0
let s:l = 557 - ((24 * winheight(0) + 24) / 49)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
557
normal! 035|
if exists('s:wipebuf')
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
