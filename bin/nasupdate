#! /usr/bin/env perl

use myperl::Pxb;
use autodie ':all';


opts <<'-';
	[-qRD] { <dir> | -d <path> [<dir>] }
	-R : reverse sync (local => NAS)
	-d : direct mode (update directly to <path>)
	-q : quiet mode (don't display files during the _real_ update)
	-D : debug mode
	<dir>  : directory to (potentially) sync
	         (must start with share name)
	<path> : path to sync; must be absolute!
			 (<dir> can be inferred if <path> starts
			 with `/export`; otherwise you must specify it)
-

my ($src, $dest) = do
{
	if ($OPT{d})
	{
		my $dest = $OPT{d};
		-d $dest && $dest =~ m|^/| or fatal("must use existing absolute path with -d");
		my $dir = $dest =~ m{^/export/(.*)$} ? $1 : shift // usage_error("cannot infer share name from $dest");
		my $src = "taaveren:/volume1/$dir";
		($src, $dest);
	}
	else
	{
		my $dir = shift or usage_error("must supply directory to sync");
		my $src = "taaveren:/volume1/$dir";
		my $dest = dir( '/var/sync/synology', $dir );
		-d $dest or fatal("can't locate: $dest");
		($src, $dest);
	}
};


if ($OPT{R})
{
	exit unless confirm("THIS IS VERY DANGEROUS!! ARE YOU SURE YOU WANT TO DO THIS?");
	($dest, $src) = ($src, $dest);
}

my @excludes = map {; '--exclude' => $_ } ('.sync', '@eaDir', '\#recycle');
my @cmd = (qw< rsync -az --no-o --no-g --no-p -e >, 'ssh -p 2322 -l egwene', qw< -u >, @excludes);
my @view = (@cmd => -v => -n => "$src/", "$dest/", '|', split(' ', $ENV{PAGER}));
sh @view;

if (confirm("do it for real?"))
{
	my @do = (@cmd, $OPT{q} ? () : '--progress', "$src/", "$dest/");
	sh @do;
}
