#! /usr/bin/env perl

use myperl::Pxb;
use autodie ':all';

use Date::Easy;
use PerlX::Maybe;
use Path::Class::Tiny;
use Time::HiRes qw< usleep >;
use List::AllUtils qw< first firstidx >;

const my $GAMING => 'Gaming';


opts <<'-';
	-D : debug mode
	build "Gaming" desktop
-


my $workspaces = sh(gsettings => get => 'org.gnome.desktop.wm.preferences', 'workspace-names');
my @workspaces = map { s/[][']//gr } split(/,\h*/, $workspaces);
say "# workspaces: ", join(", ", @workspaces) if $OPT{D};

if (not $GAMING ~~ @workspaces)
{
	say "# going to build new desktop" if $OPT{D};
	push @workspaces, $GAMING;
	$workspaces = '[' . join(', ', map { "'$_'" } @workspaces) . ']';
	sh(gsettings => set => 'org.gnome.desktop.wm.preferences', 'workspace-names', shq($workspaces));
	sh(xdotool => set_num_desktops => 5);
	sh(marco => '--replace', '>/dev/null', '2>&1', '&');
	sleep 5;
}

my $desktop = firstidx { $_ eq $GAMING } @workspaces;					# index-0 desktop (good for `xdotool`)
my @myterm_desktop = ( -D => $GAMING );
say "# gaming windows will land on desktop $desktop (index 0)" if $OPT{D};

# window for music
term_window('Music', '80x24+2-33');

# file browser and the PDF we'll need
unless (find_window("5e"))
{
	say "# going to build file browser" if $OPT{D};
	sh(caja => "file://$ENV{HOME}/rpg/5e");
	put_window_on_gaming("5e");
}
my $phb = first { /Player.*Handbook/ } path("~/rpg/5e")->children;
#sh(xrestore => -desktop => $GAMING, okular => shq($phb));

# text notes window
term_window('Notes', '118x43-0+29');

# goto our new desktop
sh(xdotool => set_desktop => $desktop);

# restack
sh(xdotool => search => '--name' => $_, windowactivate => '--sync')
	foreach ('Gaming Checklist', 'Campaign', 'Notes', 'Music');


sub find_window
{
	my ($name, %opts) = @_;
	$opts{desktop} //= $desktop;
	delete $opts{desktop} if $opts{desktop} eq 'ALL';
	return sh(xdotool => search =>
		maybe	'--desktop' => $opts{desktop},
				'--name' => $name
			 );
}

sub put_window_on_gaming
{
	my ($id) = @_;
	if ($id =~ /^\d+$/)								# window ID
	{
		sh(xdotool => set_desktop_for_window => $id, $desktop);
	}
	else											# window name
	{
		sh(xdotool => search => '--name' => $id, set_desktop_for_window => $desktop);
	}
}

sub term_window
{
	my ($name, $geometry) = @_;
	sh(myterm => @myterm_desktop, $name, '-', $geometry, '&');
}
