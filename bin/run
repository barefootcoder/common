#! /usr/bin/env perl

use myperl::Script DEBUG => 4;
use autodie ':all';


opts <<'.';
	[-l] | [-n] [-V] <machine> <command> [<arg> ...]
	-l : list machines I know about
	-n : don't run the command; just say what you would run
	-V : run on the (dev) Vagrant sandbox on the remote machine
	<machine> can be a unique abbreviation of a machine name
	recognizes any machine which has a dir in ~/common/local
	command is run via `remote-exe` to allow aliases, etc
.
$OPT{V} = 1 if $ME =~ /^v/;


my @MACHINES = map { basename($_) } grep { -d } glob("~/common/local/*");
if ( $OPT{l} )
{
	say "recognized machines are: ", join(', ', @MACHINES);
	exit;
}
my $machine = choose(shift);
say "running on: $machine";

if ( `dropbox status` eq '' )
{
	die "can't communicate: dropbox is not running";
}

my $command = "@ARGV" =~ s/'/'\\''/gr; $command =~ s/~/\\~/g if $OPT{V};
my @cmd = ( 'runon', $machine, $OPT{V} ? '~/local/bin/vagrant-exe' : '~/bin/remote-exe', "'$command'" );
if ( $OPT{n} )
{
	say "single arg to remote-exe; no shell expansion";
	say "@cmd";
}
else
{
	exec @cmd;
}


sub choose
{
	my $choice = join('.*', split(//, lc shift));
	my @potentials = grep { /$choice/ } @MACHINES;
	die("cannot resolve $choice") unless @potentials;
	die("too many possibilities for $choice: @potentials") if @potentials > 1;
	return $potentials[0];
}
