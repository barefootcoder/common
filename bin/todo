#! /usr/bin/env perl

use myperl;
use myperl::Menu;

use JSON::XS;
use Tie::IxHash;
use List::MoreUtils qw< firstidx >;


my $cur_context = shift // 'today';
# default contexts (by day)
my %CONTEXT_DAYS =
(
	Mon		=>	'+computer',
	Tue		=>	'-work',
	Wed		=>	'+perl',
	Thu		=>	'+gaming',
	Fri		=>	'+forum',
	Sat		=>	'+reorg',
	Sun		=>	'(+writing or +music)',
);

# priorities
my @PRIORITIES = qw< A1 A2 A3 B1 B2 B3 C1 C2 C3 D1 D2 D3 >;

tie my %context_menu, 'Tie::IxHash',
(
	"Today's context"					=>	'today',
	"Work"								=>	'+work',
	"Choose a category"					=>	'cat',
	"Choose a project"					=>	'proj',
	"Only non-work"						=>	'-work',
);

tie my %main_menu, 'Tie::IxHash',
(
	'Add an item'						=>	\&add_item,
	'Bump an item (increase priority)'	=>	\&bump_item,
	'Context switch'					=>	\&change_context,
	'Done with a task'					=>	\&done_item,
	'Edit a task'						=>	\&edit_item,
	'Push an item (decrease priority)'	=>	\&push_item,
	'Reload program'					=>	sub { exec $0, $cur_context },
	'Enter a custom command'			=>	\&custom,
);

menu::status(sub {
	say "Current context: $cur_context";
	system(qw< task ls >, $cur_context);
});

change_context($cur_context);
menu(\%main_menu, prompt => "\nTask menu:  (Esc to refresh)") while 1;



#################
# HELPER SUBS
#################

func today
{
	# we want each day to start at 6am
	# thus, times prior to 6am should register as "yesterday"
	# so we just take the current time and subtract 6 hours
	return time - 60 * 60 * 6;
}

func pick_item ($action)
{
	my $task = prompt "Which task $action?", -integer => sub { $_ > 0 };
	system(qw< task ls >, $task);
	return prompt(-y1, "Is this the right task?") ? $task : 0;
}

func item_info ($id)
{
	my $json = `task $id export`;
	return decode_json($json);
}

#################
# MENU SUBS
#################

func custom
{
	my $line = prompt "Send command: task ";
	system("task $line");
}


func add_item
{
	my $desc = prompt "Task:";

	my $def_proj = $cur_context =~ /proj:(\w+)/ ? $1 : '';
	my $proj = prompt "Project:";

	my $def_cat = $cur_context =~ /\+(\w+)/ ? $1 : '';
	my $cat = prompt "Category:";

	my $pri = prompt -single, -menu => [ @PRIORITIES ], 'Priority:';

	die("must supply all values") unless $desc and $proj and $cat and $pri;
	system(qw< task add >, "proj:$proj", "+$cat", "xpri:$pri", qw< -- >, $desc);
}


func change_priority ($verb, $inc)
{
	if (my $task = pick_item("to $verb"))
	{
		my $item = item_info($task);
		my $old_pri = $item->{'xpri'};
		my $new_pri = $PRIORITIES[ (firstidx { $_ eq $old_pri } @PRIORITIES) + $inc ];
		if (prompt(-y1, "Changing priority from $old_pri to $new_pri.  Is this right?"))
		{
			system(qw< task >, $task, qw< mod >, "xpri:$new_pri");
		}
	}
}

func bump_item { change_priority(bump => -1) }
func push_item { change_priority(push => +1) }


func done_item
{
	if (my $task = pick_item("is done"))
	{
		system(qw< task >, $task, qw< done >);
	}
}


func edit_item
{
	if (my $task = pick_item("to edit"))
	{
		system(qw< task >, $task, qw< edit >);
	}
}


func change_context ($context?)
{
	unless ($context)
	{
		$context = menu(\%context_menu);
	}

	given ($context)
	{
		when ('today')
		{
			my $day = time2str('%a', today);
			$cur_context = $CONTEXT_DAYS{$day};
		}

		when ('cat')
		{
			my $cat = prompt "Enter category:";
			$cur_context = "+$cat";
		}

		when ('proj')
		{
			my $proj = prompt "Enter project:";
			$cur_context = "proj:$proj";
		}

		when (/^[+-]/ or /^proj:/)
		{
			$cur_context = $context;
		}

		default
		{
			die("don't know how to interpret context: $context");
		}
	}
}
