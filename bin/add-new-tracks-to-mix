#! /usr/bin/env perl

use v5.14.0;
use warnings;
use autodie ':all';

use Const::Fast;
use List::AllUtils qw< firstidx apply >;

# This really needs to get moved into a common lib somewhere ...
const my $ROMAN_NUMERAL => qr/\bM{0,4}(?:CM|CD|D?C{0,3})(?:XC|XL|L?X{0,3})(?:IX|IV|V?I{0,3})\b/;


# we expect a block from the `mixes` file to be piped to us
my @lines = <STDIN>;

# First, verify that we really have a mix block.
# The header separator can be the 2nd, 3rd, or 4th line of the block.
my $separator_line = firstidx { /^={3,}$/ } @lines;
die("Does not appear to be a mix block! [$separator_line]") unless $separator_line ~~ [1..3];

# Next, make sure there are some new tracks to add.
# New tracks are indicated by a leading `>`.
my @new_tracks = grep { /^> / } @lines;
die("No new tracks to add!") unless @new_tracks;

# Have to set up the evironment properly.
$ENV{MUSICHOME} = '/export/music';
$ENV{PERL5LIB}  = "$ENV{MUSICHOME}/lib:$ENV{PERL5LIB}";

# Now we can add said tracks.
my $mix_name = $lines[0] =~ s/\s+$ROMAN_NUMERAL$//r;
chomp $mix_name;
open(PIPE, "| bin/add-to-mix '$mix_name' >/dev/null");
print PIPE foreach @new_tracks;
close(PIPE);

# Assuming we've survived this far, spit our mix block back out.
# The only change we'll make is to change leading `> ` to ` X`.
# (This is the same thing you get via the `q` macro in `vims mixes`.)
print apply { s/^> / X/ } @lines;
