#! /usr/bin/env perl

use myperl::Pxb;
use autodie ':all';

use Date::Easy;
use List::AllUtils qw< pairkeys pairgrep >;

const my $CONNECT  => '/usr/NX/bin/nxplayer';
const my $PREVIOUS => file('/tmp/previously-shown-desktop');
const my $ICONS    =>
{
	ERROR	=> '/usr/share/icons/Humanity/status/48/error.svg',
	INFO	=> '/usr/share/icons/Humanity/status/48/info.svg',
};

const my $WORK_DESKTOP =>
{
	zadash	=>	'caemlyn',
	haven	=>	'avalir',
};
const my $HOME_DESKTOP => { reverse %$WORK_DESKTOP };


opts <<'-';
	[-D] <machine>
	-D : debug mode (implies -v)
	<machine>  : which host to show desktop for
-
#$OPT{v} = 1 if $OPT{D};
$OPT{n} //= 1;

my $host = shift // usage_error('must supply host');


# Get rid of any stray disconnected windows before opening new ones.
# (ChatGPT helped write this: https://chat.openai.com/share/51318917-e9ad-4370-8fa6-5f814dcd8f2d)
sh(wmctrl => -ic => $_) foreach
		pairkeys
		pairgrep { $b eq "NoMachine"      }
		map      { (split(" ",$_,4))[0,3] }
		sh       ( wmctrl => -l =>        )
;


my $me = sh('hostname');
if ($host eq 'PREVIOUS')
{
	-r $PREVIOUS or notify(ERROR => "No previous desktop yet.");
	$host = $PREVIOUS->slurp;
}
else
{
	if ($host eq 'WORK')
	{
		if ( exists $WORK_DESKTOP->{$me} )
		{
			$host = $WORK_DESKTOP->{$me};
		}
		else
		{
			if ( exists $HOME_DESKTOP->{$me} )
			{
				$host = $me;						# trigger error below
			}
			else
			{
				notify(ERROR => "show-desktop: couldn't find work desktop for $me");
			}
		}
	}
	elsif ($host eq 'HOME')
	{
		if ( exists $HOME_DESKTOP->{$me} )
		{
			$host = $HOME_DESKTOP->{$me};
		}
		else
		{
			if ( exists $WORK_DESKTOP->{$me} )
			{
				$host = $me;						# trigger error below
			}
			else
			{
				notify(ERROR => "show-desktop: couldn't find home desktop for $me");
			}
		}
	}
	elsif ($host eq uc $host)
	{
		notify(ERROR => "show-desktop: called with unknown arg [$host]");
	}

	if ($host eq $me)
	{
		my $cur_window = sh( xdotool => getactivewindow => getwindowname => );
		if ($cur_window =~ /NoMachine - (\w+)/)
		{
			notify(ERROR => "This should not be possible!");
		}
		else
		{
			notify(INFO => "Already on ${host}'s desktop.");
			exit;
		}
	}

	$PREVIOUS->spew($host);
}

my $rdesktop = "NoMachine - $host";
my $win = sh(xdotool => search => '--name' => $rdesktop);
if ($win)
{
	my $cur_desktop = sh(xdotool => get_desktop => );
	sh(xdotool => set_desktop_for_window => $win, $cur_desktop);
	sh(wmctrl => -ir => $win, -b => 'add,fullscreen');
	sh(xdotool => windowactivate => '--sync' => $win);
}
else
{
	my $machine = file("~/NoMachine/\u$host.nxs");
	sh($CONNECT => $machine);
}


sub notify
{
	my ($type, $msg) = @_;
	exists $ICONS->{$type} or notify(ERROR => "show-desktop: called `notify` with an unknown type [$type]");
	my $delay = $type eq 'ERROR' ? 5000 : 3000;
	sh('notify-send' => -t => $delay, -i => $ICONS->{$type}, $msg);
	exit 1 if $type eq 'ERROR';
}
