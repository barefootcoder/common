#! /bin/bash

source ~/bin/bash_funcs


while getopts ":h" opt
do
	case $opt in
		h)  echo "usage: $me -h | <host> <file> [...]" >&2
			echo "    -h : this help message" >&2
			echo "    host : name of host to steal file from" >&2
			echo "    file : file(s) to steal" >&2
			exit
			;;
		:)  usage_erorr "$OPTARG requires an argument"
			;;
		\?) usage_error "unknown argument $OPTARG"
			;;
	esac
done
shift $(( $OPTIND - 1 ))

ME=$LOCALHOSTNAME
OTHER=$1
shift

[[ $OTHER ]] || usage_error "must supply hostname to steal from"
[[ $# -ge 1 ]] || usage_error "give me at least one file to steal"

[[ $ME == $OTHER ]] && die "can't steal from myself"
[[ -d ~/Dropbox/machine/$OTHER ]] || die "never heard of machine $OTHER"


mydir=~/common
otherdir=~/Dropbox/machine/$OTHER/common
cd $mydir

for file
do
	[[ -r $otherdir/$file ]] || die "can't read file $file on $OTHER"
	if [[ -e $mydir/$file ]]
	then
		[[ -w $mydir/$file ]] || die "don't have permission to overwrite $file locally"
		if [[ $(git diff $mydir/$file | wc -l) -eq 0 ]]
		then
			diff $mydir/$file $otherdir/$file | ${PAGER:-less}
			echo ''
			if yn "Overwrite the existing file?"
			then
				cp $otherdir/$file $mydir/$file
			fi
		else
			warn "$file has uncommitted changes; will not overwrite"
		fi
	else
		[[ -w $(dirname $mydir/$file) ]] || die "can't write to the dir of $file locally"
		cp $otherdir/$file $mydir/$file
	fi
done
