#! /usr/bin/perl

use Getopt::Std;
use File::Basename;


getopts('fsb:Bh');

if ($opt_h)
{
	print STDERR "usage: ", basename($0), " -h | [-sf] [-B | -b env_var] [dir ...]\n";
	print STDERR "       -s : return dirs separated by space (default: colon)\n";
	print STDERR "       -f : add dir(s) to front of list instead of back\n";
	print STDERR "       -b : use this env_var's value as the base list to add to [default: \$PATH]\n";
	print STDERR "       -B : start with a blank base list\n";
	print STDERR "       -h : this help message\n";
	print STDERR "     dirs that do not exist and duplicate dirs are removed from the list\n";
	print STDERR "     this is true even if the dirs are in the base list instead of the supplied list\n";
	exit;
}

$opt_b ||= 'PATH';
unless ($opt_B)
{
	@dirs = split(':', $ENV{$opt_b});
	%dirs = map { $_ => 1 } @dirs;
}

foreach $dir (@ARGV)
{
	if ($dir and not exists $dirs{$dir} and -d $dir)
	{
		push @newdirs, $dir;
		$dirs{$dir} = 1;
	}
}
if ($opt_f)
{
	unshift @dirs, @newdirs;
}
else
{
	push @dirs, @newdirs;
}

print join($opt_s ? ' ' : ':', @dirs);


__END__


#! /bin/bash

base="$1"
shift

for dir in "$@"
do
	if [[ -n $dir ]]
	then
		if ! echo "$base" | /bin/grep -Eq '(^|:)'"$dir"'(:|$)'
		then
			if [[ -d $dir ]]
			then
				if [[ -z $base ]]
				then
					base="$dir"
				else
					base="$base:$dir"
				fi
			fi
		fi
	fi
done

echo "$base"
