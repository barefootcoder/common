#! /bin/bash

. ~/bin/bash_funcs
readonly wikibase='http://confluence.rent.com/display'					# needed for checking wikify files


taint=$(perl -lne 'print "T" if /perl -T/; exit if $. > 1' $1)
#echo "url would be $(perl -lne 'print "'$wikibase'/$1/$2" if $. == 1 && /^==> (.+?):(.+?) <==$/' "$1")"

function syntax-check
{
	if [[ $(file $1) == *"shell script"* ]]
	then
		echo "checking bash syntax ..."
		bash -n $1
	else
		perl -c$taint $1
	fi
	exit 0
}

proj=rent
if [[ $(vc info project) == "rent" ]]
then
	# get the name of the sandbox machine from the Unison pref file
	readonly sandbox=$(perl -lne 'print $1 if m{^root\s*=\s*ssh://(?:\w+@)?([\w.-]+)//}' ~/.unison/sandbox.prf)

	#unison -ui text -batch sandbox
	file="$(realpath "$1")"
	#file=${file/$proj/rent.com}
	echo
	ssh $sandbox perl -c$taint "$file"
elif [[ $(vc info project) == "CE" ]]
then
	#eval `~/bin/addpath -eb PERL5LIB $CEROOT/extlib/lib/perl5 $CEROOT/extlib/lib/perl5/x86_64-linux`
	syntax-check $1
else
	if realpath "$1" | grep -q blog
	then
		blog-wc "$1"
	elif [[ "$1" == xtrack_posts ]]
	then
		scp $1 heroscapers:bin
		ssh heroscapers perl5/perlbrew/perls/perl-5.14.2/bin/perl -c bin/$1
	else
		url=$(perl -lne 'print "'$wikibase'/$1/$2" if $. == 1 && /^==> (.+?):(.+?) <==$/' "$1")
		if [[ -n $url ]]
		then
			echo "got url! [$url]"
			# http://confluence.rent.com/display/Arch/Home
			wikify "$url" | diff -b "$1" -
		else
			syntax-check $1
		fi
	fi
fi
