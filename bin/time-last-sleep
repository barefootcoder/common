#!/bin/bash
. ~/bin/bash_funcs

ago=1
while getopts ":n:h" opt
do
	case $opt in
		n)	ago=$OPTARG
			;;
		h)  echo "usage: $me -h | [-n<num>]" >&2
			echo "    -n : print the time of this many sleeps ago" >&2
			echo "    -h : this help message" >&2
			echo "    num : integer greater than 0 (default: 1)" >&2
			exit
			;;
		:)  usage_error "$OPTARG requires an argument"
			;;
		\?) usage_error "unknown argument $OPTARG"
			;;
	esac
done
shift $(( $OPTIND - 1 ))

function findit
{
	local times=$ago
	local sleep_msg='Preparing system for mem sleep|Suspending system\.\.\.'

	for log in /var/log/syslog*
	do
		sleeps="$(zgrep -E "$sleep_msg" $log | tac)"
		if [[ $sleeps ]]
		then
			num=$(echo "$sleeps" | wc -l)
			if [[ $num -lt $times ]]
			then
				times=$(( $times - $num ))
			else
				echo "$sleeps" | sed -n "${times}p" | awk '{print $1, $2, $3}'
				break
			fi
		fi
	done
}

time=$(findit)
[[ $time ]] || die "can't find a sleep from $ago times ago"
perlsecs $time
