#! /bin/bash -e
. ~/bin/bash_funcs


function USAGE
{
	echo ''
	echo "usage: $me [-Y] [-f] <base>"
	echo ''
	echo '  Save changes to repo (uncommitted and unpushed) to S3 ferry file.'
	echo ''
	echo '  Long options:'
	echo "    --yesterday  : use yesterday's date for ferry file"
	echo "                   (default: use today's date)"
	echo '    --force      : force (allow overwriting existing files)'
	echo '    --help       : this help message'
	echo ''
	echo '  Short options:'
	echo '    -Y           : same as --yesterday'
	echo '    -f           : same as --force'
	echo '    -h           : same as --help (also -?)'
	echo ''
	echo '  Arguments:'
	echo '    <base>       : base name of ferry file'
	echo ''
}

force=false
filedate="6 hours ago"
while [[ $# -gt 0 ]]
do
	case $1 in
		--yesterday|-Y) filedate="$filedate yesterday"
						shift
						;;
		--force|-f)		force=true
						shift
						;;
		--help|-h|-\?)  if [[ -t 1 ]]
						then
							USAGE | ${PAGER:-less -F}
						else
							USAGE
						fi
						exit
						;;
		--)             shift
						break
						;;
		-*)             usage_error "Unrecognized option: $1"
						;;
		*)              break
						;;
	esac
done

tarfile=$1
[[ $tarfile ]] || die "must supply ferry file basename"

# make sure we have creds before we get too far in
$CEROOT/devtools/aws-credentials-check


# current repo check
CE='campus-explorer'
read owner repo <<<$(git config --get remote.origin.url | perl -lne 'm|^.*?:(.*?)/(.*)\.git$| and print "$1 $2"')
[[ $owner && $repo ]] || die "this does not appear to be a valid repo directory"
[[ $owner == $CE ]]   || die "this repo is not owned by $CE"

# now make sure we're not going to overwrite anything
# (unless the user tells us to)
s3url=s3://backup.campusexplorer.com/sandbox/bburden/CE-branch@$repo:$tarfile-$(date -d "$filedate" +%Y%m%d).tgz
if aws s3 ls $s3url >/dev/null
then
	$force || die "ferry exists: $s3url"
fi


ferrydir=/var/tmp/ferry
mkdir -p $ferrydir

first_unpushed=$(vc info %local_commits | tail -n1)
if [[ $first_unpushed ]]
then
	patchdir=tmp/patches
	if [[ -d $patchdir ]]
	then
		die "$patchdir already exists; left over from prior run?"
	elif [[ -e $patchdir ]]
	then
		die "$patchdir exists but is not a dir; WTF?"
	fi
	trap "/bin/rm -rf $patchdir" EXIT
	mkdir $patchdir
	git format-patch -o $patchdir $first_unpushed^..HEAD
fi

ferry=$ferrydir/$tarfile.tgz
tar cvpzf $ferry $(vc info %mod_files) ${first_unpushed:+$patchdir}
aws s3 cp $ferry s3://backup.campusexplorer.com/sandbox/bburden/CE-branch@$repo:$tarfile-$(date -d "$filedate" +%Y%m%d).tgz
