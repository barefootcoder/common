set showmode			" want to see insert / replace mode
set nobackup			" stop leaving annoying tilde droppings all over the place
set autoindent			" handy for programming
set tabstop=4			" standard for Barefoot files
set shiftwidth=4		" needs to match tabstop
set undolevels=1000		" go with default undolevels
set linebreak			" makes long lines easier to read without inserting newlines
set noexpandtab			" yes, I like real tabs in my files; so sue me

" make Y same as y$ (matches other operators)
nmap Y y$
" make g same as G (g not used in original vi, so this mapping is ancient)
map g G
" make [[ work for Perl-style curly brace placement (doesn't work if you're actually on the close curly)
map [[ ][%
" ditto for ]] (these also screw up your `` or '', but, hey: nothing's perfect)
map ]] 2][%
" turn "add" into "plus" (because ^A conflicts with screen, and ^P is the same as k)
map <C-P> <C-A>
" easy comment
map q :s/^/\/\* /<CR>:s/$/ \*\//<CR>
" easy uncomment
map Q :s/^\/\* //<CR>:s/ \*\/$//<CR>
" remove any ^R remap
"try | unmap <C-R> | catch /E31/ | endtry
" show buffers
map <C-Y> :files<CR>
" get rid of annoying trailing spaces
map  :%s/[ 	]\+$//<CR>
" search for the word under the cursor
nmap <C-_> /\<<C-R><C-W>\><CR>
" start search from top of file
nmap <C-N> 1Gn
" stop the hideously annoying shift+backspace problem
map!  
" push to testing
nmap <C-W> :w<CR>:!pusht %<CR>
" compile check
nmap <C-C> :w<CR>:!ccheck %<CR>
" show doco
nmap <Esc>d :w<CR>:!perldoc %<CR>

:function! FindMatching()
:	if getline(".") =~ '=cut'
:		normal! ``
:	elseif getline(".") =~ '^='
:		call search("^=cut", "s")
:	else
:		normal! %
:	endif
:endfunction
nmap % :call FindMatching()<CR>

" allow locking of vi
map LockZZ :let choice = confirm("Are you sure you want to exit?", "&Yes\n&No", 2)<CR>:if choice == 1<CR>:x<CR>:endif<CR><CR>
map Lock :map ZZ LockZZ<CR>:echo "Locked"<CR>

set formatoptions=croqv		" only autoformat comments
set textwidth=100			" width for comment autoformatting
" comment markers (only works for Perl and piqt, and sort of for Mason)
set comments=b:#,b:%,b:*,b:--\!\ print,b:--
" reformat current comment block (using Alt-R)
nnoremap <Esc>r ^gq/^$\<Bar>^<Tab>*#$\<Bar>^<Tab>*[^<Tab>#]\<Bar>^--! print$<CR>
nnoremap <Esc>r<Esc>r gqgq
nnoremap <Esc>r<Esc>l m`:1,$! reset_lines<CR>``
" use my tfmt program for reformatting non-comment stuff
set equalprg=tfmt\ -t4\ -w100

"syntax off
set nohlsearch
set noincsearch
set nocindent
filetype off
filetype indent off

" in case we want to :mksession
set sessionoptions=buffers,curdir,globals,options,unix

let loaded_matchparen = 1

" restore last known position when opening a new file
" (this used to happen automatically, but something I did turned it off)
au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g`\"" | endif
