VCtoolsDir=~/proj/VCtools

WorkingDir=~/proj
WorkingDir=~/workproj

# Policy file for CE
<<include /home/buddy/workproj/CE/etc/ceflow/CE.conf>>

DefaultVC=git
<<include ~/proj/VCtools/share/conf/git.conf>>
<<include ~/proj/VCtools/share/conf/svn.conf>>

DefaultSourcePath=git@github.com:%user/%project.git


<Project VCtools.svn>
    VC = svn
</Project>

<Project common>
	ProjectDir = ~/common
</Project>


# for testing purposes
# (a non-destructive custom command)
<CustomCommand fred>
    Verify = project
	#Verify = clean
    Argument = author		<the author of the commit>
	<Trailing coolfiles>
		singular = coolfile
		qty = 1..
	</Trailing>

    action <<---
		TEST=1
		$TEST -> { say "hi!" }
		? stop now?
		> %is_dirty
		{ bmoogle }
		= dols
		? keep going
        git log --author %author %coolfiles
    ---
</CustomCommand>
<CustomCommand dols>
	action <<---
		echo "checking that \\$vars are not eaten"
		ls
	---
</CustomCommand>
<CustomInfo lsout>
	action <<---
		= dols
	---
</CustomInfo>



<<include ~/.vctools/custom.conf>>
<<include ~/.vctools/CE-custom.conf>>


# overrides for CE
<Policy CE>
	<CustomInfo cur_branch_remote>
		action <<---
			{ (grep /^\*/, `git branch -vv`)[0] =~ m{\[(\w+)/} and $1 }
		---
	</CustomInfo>
	<CustomCommand push-cibola>
		Verify = project
		Files = 0

		action <<---
			%cur_branch !~ m{^feature/}							->	! This doesn't look like an appropriate branch.
			%cur_branch_remote ne 'cibola'						->	! This doesn't look like an appropriate branch.

			CIBOLA_BRANCH=`ssh cibola 'cd ~/workproj/CE-mounted ; git rev-parse --abbrev-ref HEAD'` =~ s/\n$//r
			"$CIBOLA_BRANCH" eq %cur_branch						->	! Have to change branches on Cibola first.

			COMMIT_PREPPED=`git log trunk..HEAD` =~ /DO NOT PUSH TO GITHUB/ ? 1 : 0
			HAS_CHANGES=`git status -s --untracked=all` ? 1 : 0
			$HAS_CHANGES										->	vcpatchws -f `checktabs -nb`
			$HAS_CHANGES										->	git add %mod_files
			$HAS_CHANGES and $COMMIT_PREPPED					->	git commit -v --amend
			$HAS_CHANGES and not $COMMIT_PREPPED				->	git commit -m "work in progress; DO NOT PUSH TO GITHUB"

			git diff --stat HEAD^
			? Push this to Cibola?
			git push --force-with-lease
		---
	</CustomCommand>
	<CustomCommand pull-cibola>
		Verify = project
		Files = 0

		action <<---
			%cur_branch !~ m{^feature/}							->	! This doesn't look like an appropriate branch.
			%cur_branch_remote ne 'cibola'						->	! This doesn't look like an appropriate branch.
			%is_dirty											->	! You really shouldn't have any uncommitted work.

			git reset --hard origin/trunk
			git stash save -u 'FOR DROPPING'
			`git stash list | head -n1` =~ /FOR DROPPING/		->	git stash drop

			= branch-update
			git fetch cibola
			git pull --rebase
			`git log -n1 --format=%s` =~ /DO NOT PUSH TO GITHUB/	->	git reset HEAD^
		---
	</CustomCommand>
</Policy>
