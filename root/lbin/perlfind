#! /bin/bash

me=${0##*/}

verbose=0
quiet=0
printversion=0
edit=0
mode=modfind
while getopts ":vqVefh" opt
do
	case $opt in
		v)	verbose=1
			;;
		q)	quiet=1
			;;
		f)	mode=filefind
			;;
		e)	edit=1
			;;
		V)	printversion=1
			;;
		h)	echo "usage: $me [-qV] { module | -f [-v] modulefile }" >&2
			echo "    -v : show full path (only matters with -f, and if file is under .)" >&2
			echo "    -q : no output (rely only on return value)" >&2
			echo "    -f : search for filename (omit .pm) instead of module name" >&2
			echo "    -V : print version number of module (if it can be found)" >&2
			echo "    -e : edit the file (uses $EDITOR or vi)" >&2
			exit
			;;
		:)	echo "$me: $OPTARG requires an argument ($me -h for help)" >&2
			exit 2
			;;
		\?)	echo "$me: unknown argument $OPTARG ($me -h for help)" >&2
			exit 2
			;;
	esac
done
shift $(( $OPTIND - 1 ))

module="$1"
if [[ -z $module ]]
then
	echo "$me: must supply module or modulefile ($me -h for help)" >&2
	exit 2
fi


function results
{
	if [[ $printversion -eq 1 ]]
	then
		grep '$.*VERSION[ 	]*=[ 	]*'"['\"0-9]" $1
	else
		echo $1
	fi
	if [[ $edit -eq 1 ]]
	then
		${EDITOR:-vi} $1
	fi
}


if [[ $mode == "modfind" ]]
then
	
	perlprog='my $rf = shift; $rf =~ s@::@/@g; $rf .= ".pm"; use '$module'; print $INC{$rf}'
	modpath=$(perl -e "$perlprog" $module 2>/dev/null)
	if [[ -z "$modpath" ]]
	then
		if [[ $quiet -eq 0 ]]
		then
			echo "Can't locate module $module" >&2
			if [[ $verbose -eq 1 ]]
			then
				perl -e "$perlprog" $module >/dev/null
			fi
		fi
		exit 1
	else
		if [[ $quiet -eq 0 ]]
		then
			results $modpath
		fi
	fi

else										# must be filefind

	output="%p"

	module=${module//::/\/}
	if [[ ${module%.*} == $module ]]
	then
		module="$module.pm"
	fi
	[[ $verbose -eq 1 ]] && echo "searching for: $module"

	output="$(find $(perl -e 'print join(" ", grep { -d } @INC)') -path "*$module" -printf "$output\n")"
	if [[ -z $output ]]
	then
		if [[ $quiet -eq 0 ]]
		then
			echo "No matches"
		fi
		exit 1
	else
		if [[ $quiet -eq 0 ]]
		then
			results "$output"
		fi
	fi

fi
