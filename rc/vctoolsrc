eval "set "`grep VCtoolsDir ~/.vctools/vctools.conf`
alias vc $VCtoolsDir/bin/vc
set complete_file=~/.tcshrc.complete.vc
if ( ! -e $complete_file || $?tcsh_reset ) then
	# refresh VCtools shell completion files
	vc shell-complete >$complete_file
endif
source $complete_file
unset complete_file

alias vcd 'cd `vc info -P "\!*" project:root` ; setenv VCTOOLS_SHELL vc ; resrc'
complete vcd 'p/1/`vc info project:all`/'

if ( $?VCTOOLS_SHELL ) then
	alias st 'vc stat-plus'
	alias sync vc sync
	alias vpush vc push
	alias stg vc stage
	alias istg git add -i
	alias stg-amend 'vc amend-local'
	alias unstage vc unstage
	alias commit vc commit
	alias unget vc unget
	alias branches vc show-branches
	alias unbranch vc unbranch
	alias rebranch vc rebranch
	alias vmerge vc merge
	alias resolved vc resolved
	alias stash vc stash
	alias unstash vc unstash

	alias branch vbranch

	alias vd git diff
	alias vnew git add -N
	alias vdel git rm
	set top_space='echo "\n\n\n\n\n\n\n\n\n"'
	set filter_line_too_long="perl -pe 's/:.{512,}/:<<LINE TOO LONG!>>/'"
	set ignore_nytprof='--ignore-file "match:nytprof.*"'
	set always_ignore="--ignore-dir tmp --ignore-dir extlib --ignore-dir perl5 --ignore-dir var $ignore_nytprof"
	set code_ignore="$always_ignore --ignore-dir t --ignore-dir tlib --ignore-dir doc"
	alias vg "$top_space ; ack $always_ignore --match \!* | $filter_line_too_long"
	alias vgl "$top_space ; ack --perl $code_ignore --match \!* | $filter_line_too_long"
	alias vgt "$top_space ; ack --match \!* t/ tlib/ | $filter_line_too_long"
	alias vf "$top_space ; ack $always_ignore -f | ack --match \!*"
	alias vlog git-helper-log
	alias vbranch git-helper-branch
	alias testclean 'git stash save ; t ; git stash pop'
	alias tfix 'checktabs -n ; sleep 1 ; vcpatchws -f `checktabs -nb`'
endif
